model WarehouseWithFixedCosts
    uses "mmxprs"

    declarations
        x: array(1..2, 1..3) of mpvar  ! Decision variables: units shipped
        y: array(1..2) of mpvar        ! Binary variables for warehouse activation
        M: real                        ! Large constant for linking constraints
    end-declarations

    M := 100  ! Set M to a sufficiently large value (e.g., sum of all demands or max supply)

    ! Objective: Minimize transportation + fixed costs
    Cost := 8*x(1,1) + 6*x(1,2) + 10*x(1,3) +
            9*x(2,1) + 12*x(2,2) + 7*x(2,3) +
            100*y(1) + 120*y(2)
    minimize(Cost)

    ! Supply constraints with warehouse activation
    x(1,1) + x(1,2) + x(1,3) <= 40 * y(1)  ! W1 capacity constraint
    x(2,1) + x(2,2) + x(2,3) <= 50 * y(2)  ! W2 capacity constraint

    ! Demand constraints
    x(1,1) + x(2,1) >= 30  ! Demand at S1
    x(1,2) + x(2,2) >= 20  ! Demand at S2
    x(1,3) + x(2,3) >= 40  ! Demand at S3

    ! Non-negativity and binary constraints
    forall(i in 1..2, j in 1..3) x(i,j) >= 0
    forall(i in 1..2) y(i) is_binary

    ! Solve the problem
    writeln("Solving the problem with fixed costs...")
    minimize(Cost)

    ! Display the results
    writeln("Optimal solution:")
    forall(i in 1..2, j in 1..3) do
        writeln("x(", i, ",", j, ") = ", getsol(x(i,j)))
    end-do

    forall(i in 1..2) do
            writeln("y(", i, ") = ", getsol(y(i)))
        end-do
    writeln("Minimum Total Cost: ", getobjval)

end-model